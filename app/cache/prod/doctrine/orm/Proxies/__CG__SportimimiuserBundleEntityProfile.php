<?php

namespace Proxies\__CG__\Sportimimi\userBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Profile extends \Sportimimi\userBundle\Entity\Profile implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'id', 'user', 'country', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'document', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'notifications', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'invitations_send', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'invitations_receive', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'invitations_team_send', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'news', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'leader', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'events', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'teams', 'sports', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'friendsWithMe', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'myFriends', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'positions', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'levels', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'comments', 'skills', 'email', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'nom', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'prenom', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'password', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'dateNaissance', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'sexe', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'description', 'phone', 'completion', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'articles', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'places', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'playingTogether', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'placeCurrentlyPlay', 'searchPlayer', 'message_send', 'message_recieve', 'message_reply');
        }

        return array('__isInitialized__', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'id', 'user', 'country', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'document', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'notifications', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'invitations_send', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'invitations_receive', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'invitations_team_send', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'news', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'leader', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'events', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'teams', 'sports', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'friendsWithMe', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'myFriends', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'positions', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'levels', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'comments', 'skills', 'email', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'nom', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'prenom', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'password', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'dateNaissance', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'sexe', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'description', 'phone', 'completion', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'articles', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'places', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'playingTogether', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Profile' . "\0" . 'placeCurrentlyPlay', 'searchPlayer', 'message_send', 'message_recieve', 'message_reply');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Profile $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', array());

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', array($prenom));

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateNaissance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateNaissance', array());

        return parent::getDateNaissance();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateNaissance($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateNaissance', array($date));

        return parent::setDateNaissance($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getSexe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSexe', array());

        return parent::getSexe();
    }

    /**
     * {@inheritDoc}
     */
    public function setSexe($sexe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSexe', array($sexe));

        return parent::setSexe($sexe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSports()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSports', array());

        return parent::getSports();
    }

    /**
     * {@inheritDoc}
     */
    public function setSports($sports)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSports', array($sports));

        return parent::setSports($sports);
    }

    /**
     * {@inheritDoc}
     */
    public function addSports($sport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSports', array($sport));

        return parent::addSports($sport);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocument', array());

        return parent::getDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function setDocument(\Sportimimi\userBundle\Entity\Image $document)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDocument', array($document));

        return parent::setDocument($document);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(\Sportimimi\userBundle\Entity\Country $country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($pass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($pass));

        return parent::setPassword($pass);
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Sportimimi\userBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', array());

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvent(\Sportimimi\userBundle\Entity\Event $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvent', array($event));

        return parent::addEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvent(\Sportimimi\userBundle\Entity\Event $event)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvent', array($event));

        return parent::removeEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function addTeam(\Sportimimi\userBundle\Entity\Team $team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeam', array($team));

        return parent::addTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeams()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeams', array());

        return parent::getTeams();
    }

    /**
     * {@inheritDoc}
     */
    public function addPlace(\Sportimimi\userBundle\Entity\Place $place)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPlace', array($place));

        return parent::addPlace($place);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlaces()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlaces', array());

        return parent::getPlaces();
    }

    /**
     * {@inheritDoc}
     */
    public function getSkills()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSkills', array());

        return parent::getSkills();
    }

    /**
     * {@inheritDoc}
     */
    public function setSkills(\Sportimimi\userBundle\Entity\Skills $skills)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSkills', array($skills));

        return parent::setSkills($skills);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifications', array());

        return parent::getNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addNotifications(\Sportimimi\userBundle\Entity\Notification $notification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNotifications', array($notification));

        return parent::addNotifications($notification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTeam(\Sportimimi\userBundle\Entity\Team $team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTeam', array($team));

        return parent::removeTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getPositions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPositions', array());

        return parent::getPositions();
    }

    /**
     * {@inheritDoc}
     */
    public function addPosition(\Sportimimi\userBundle\Entity\Position $position)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPosition', array($position));

        return parent::addPosition($position);
    }

    /**
     * {@inheritDoc}
     */
    public function addFriend(\Sportimimi\userBundle\Entity\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFriend', array($profile));

        return parent::addFriend($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getFriends()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFriends', array());

        return parent::getFriends();
    }

    /**
     * {@inheritDoc}
     */
    public function getInvitations_send()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvitations_send', array());

        return parent::getInvitations_send();
    }

    /**
     * {@inheritDoc}
     */
    public function getInvitations_receive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvitations_receive', array());

        return parent::getInvitations_receive();
    }

    /**
     * {@inheritDoc}
     */
    public function getInvitations_team_send()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvitations_team_send', array());

        return parent::getInvitations_team_send();
    }

    /**
     * {@inheritDoc}
     */
    public function removeFriend(\Sportimimi\userBundle\Entity\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFriend', array($profile));

        return parent::removeFriend($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAge', array());

        return parent::getAge();
    }

    /**
     * {@inheritDoc}
     */
    public function getLevels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevels', array());

        return parent::getLevels();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function online()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'online', array());

        return parent::online();
    }

    /**
     * {@inheritDoc}
     */
    public function setSearchPlayer($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSearchPlayer', array($value));

        return parent::setSearchPlayer($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchPlayer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchPlayer', array());

        return parent::getSearchPlayer();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlaceCurrentlyPlay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlaceCurrentlyPlay', array());

        return parent::getPlaceCurrentlyPlay();
    }

    /**
     * {@inheritDoc}
     */
    public function addPlayNews(\Sportimimi\userBundle\Entity\News $news)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPlayNews', array($news));

        return parent::addPlayNews($news);
    }

    /**
     * {@inheritDoc}
     */
    public function removePlayNews(\Sportimimi\userBundle\Entity\News $news)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePlayNews', array($news));

        return parent::removePlayNews($news);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage_recieve()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage_recieve', array());

        return parent::getMessage_recieve();
    }

}
