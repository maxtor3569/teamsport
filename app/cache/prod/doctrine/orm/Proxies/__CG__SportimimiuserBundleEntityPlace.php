<?php

namespace Proxies\__CG__\Sportimimi\userBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Place extends \Sportimimi\userBundle\Entity\Place implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'placeName', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'address', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'type', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'district', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'phoneContact', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'contactName', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'capacity', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'website', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'price', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'alias', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'latitude', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'longitude', 'profile', 'sports', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'placeCurrentlyPlay', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'teamMainLocation', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'news');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'placeName', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'address', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'type', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'district', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'phoneContact', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'contactName', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'capacity', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'website', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'price', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'alias', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'latitude', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'longitude', 'profile', 'sports', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'placeCurrentlyPlay', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'teamMainLocation', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Place' . "\0" . 'news');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Place $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getPlaceName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlaceName', array());

        return parent::getPlaceName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlaceName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlaceName', array($name));

        return parent::setPlaceName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', array());

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getCapacity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapacity', array());

        return parent::getCapacity();
    }

    /**
     * {@inheritDoc}
     */
    public function getphoneContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getphoneContact', array());

        return parent::getphoneContact();
    }

    /**
     * {@inheritDoc}
     */
    public function getcontactName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getcontactName', array());

        return parent::getcontactName();
    }

    /**
     * {@inheritDoc}
     */
    public function getDistrict()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistrict', array());

        return parent::getDistrict();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function addProfile(\Sportimimi\userBundle\Entity\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProfile', array($profile));

        return parent::addProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfile', array());

        return parent::getProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

}
