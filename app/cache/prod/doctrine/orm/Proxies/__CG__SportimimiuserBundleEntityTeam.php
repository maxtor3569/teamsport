<?php

namespace Proxies\__CG__\Sportimimi\userBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Team extends \Sportimimi\userBundle\Entity\Team implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'profile', 'leader', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'document', 'matchs', 'category', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'positions', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'name', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'alias', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'mainLocation', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'mainLocationRelation', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'victory', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'defeat', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'invitations_team_receive');
        }

        return array('__isInitialized__', 'id', 'profile', 'leader', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'document', 'matchs', 'category', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'positions', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'name', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'alias', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'mainLocation', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'mainLocationRelation', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'victory', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'defeat', '' . "\0" . 'Sportimimi\\userBundle\\Entity\\Team' . "\0" . 'invitations_team_receive');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Team $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function addProfile(\Sportimimi\userBundle\Entity\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProfile', array($profile));

        return parent::addProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfile', array());

        return parent::getProfile();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\Sportimimi\userBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function setLeader(\Sportimimi\userBundle\Entity\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeader', array($profile));

        return parent::setLeader($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeader', array());

        return parent::getLeader();
    }

    /**
     * {@inheritDoc}
     */
    public function removeProfile(\Sportimimi\userBundle\Entity\Profile $profile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProfile', array($profile));

        return parent::removeProfile($profile);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', array());

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function getMainLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainLocation', array());

        return parent::getMainLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainLocation($location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainLocation', array($location));

        return parent::setMainLocation($location);
    }

    /**
     * {@inheritDoc}
     */
    public function addMatch(\Sportimimi\userBundle\Entity\Match $match)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMatch', array($match));

        return parent::addMatch($match);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatchs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatchs', array());

        return parent::getMatchs();
    }

    /**
     * {@inheritDoc}
     */
    public function getVictory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVictory', array());

        return parent::getVictory();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefeat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefeat', array());

        return parent::getDefeat();
    }

    /**
     * {@inheritDoc}
     */
    public function getPositions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPositions', array());

        return parent::getPositions();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocument', array());

        return parent::getDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function setMainLocationRelation($place)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMainLocationRelation', array($place));

        return parent::setMainLocationRelation($place);
    }

    /**
     * {@inheritDoc}
     */
    public function getMainLocationRelation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMainLocationRelation', array());

        return parent::getMainLocationRelation();
    }

}
